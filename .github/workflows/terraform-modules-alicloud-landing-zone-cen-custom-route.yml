# This is a basic workflow to help you get started with Actions
name: terraform-modules-alicloud-landing-zone-cen-custom-route
env:
  ALICLOUD_ACCESS_KEY: ${{ secrets.ALICLOUD_ACCESS_KEY }}
  ALICLOUD_SECRET_KEY: ${{ secrets.ALICLOUD_SECRET_KEY }}

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the xx path
  push:
    paths:
      # Modify according to the actual situation
      - 'terraform-modules/terraform-alicloud-landing-zone-cen-custom-route/**'
  #      - '.github/workflows/terraform-modules-alicloud-landing-zone-share-vpc.yml'

  #  schedule:
  #    - cron: '6 18 * * 2'

  #  pull_request:
  #    paths:
  #      # Modify according to the actual situation
  #      - 'terraform-modules/terraform-alicloud-landing-zone-share-vpc/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "terraform-module-ci"
  terraform-module-ci:
    # The type of runner that the job will run on
    #    runs-on: self-hosted
    runs-on: ubuntu-latest

    # Modify according to the actual situation
    environment: yunguotest1_MA_1140931609457592

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Specify the Terraform version of the running environment, pay attention to match the version required by Terraform Module
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.2.1

      # Step 1
      - name: Create and destory resource
        shell: bash
        # Modify according to the actual situation
        run: |
          pwd && ls -al
          cd terraform-modules/terraform-alicloud-landing-zone-cen-custom-route/examples/add-routing-entries
          terraform -v
          terraform init 
          terraform plan --var-file=tfvars/settings.tfvars
          terraform apply --var-file=tfvars/settings.tfvars --auto-approve
          terraform apply -destroy --var-file=tfvars/settings.tfvars --auto-approve

